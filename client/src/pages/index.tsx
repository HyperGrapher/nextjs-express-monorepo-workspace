/* eslint-disable @typescript-eslint/no-unused-vars */
import type { NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";
import { trpc } from "../utils/trpc";
import { useState, useEffect } from "react";

const Home: NextPage = () => {
  const hello = trpc.example.hello.useQuery({ text: "Kitty!" });
  const [msg, setMsg] = useState('')

  useEffect(() => {
    fetch('http://localhost:8080/express')
      .then((res) => res.json())
      .then(data => setMsg(data.message))
  }, [])

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="flex flex-col items-center justify-center gap-5 mt-8">
        <h1 className="text-5xl text-purple-700 text-center">{hello.data?.greeting}</h1>
        <h5 className="text-2xl text-center">{msg}</h5>
      </div>
    </>
  );
};

export default Home;

const Auth: React.FC = () => {
  const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery();

  const { data: sessionData } = useSession();

  return (
    <div className="flex flex-col items-center justify-center gap-2">
      {sessionData && (
        <p className="text-2xl text-blue-500">
          Logged in as {sessionData?.user?.name}
        </p>
      )}
      {secretMessage && (
        <p className="text-2xl text-blue-500">{secretMessage}</p>
      )}
      <button
        className="rounded-md border border-black bg-violet-50 px-4 py-2 text-xl shadow-lg hover:bg-violet-100"
        onClick={sessionData ? () => signOut() : () => signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
